{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","_flashMessagesService","user","username","password","authenticateUser","subscribe","data","storeUserData","show","cssClass","timeout","navigate","onLoginSubmit","helper","NavbarComponent","logout","isExpired","ProfileComponent","getProfile","profile","err","RegisterComponent","validateService","name","email","validateRegister","validateEmail","console","log","registerUser","onRegsiterSubmit","AuthGuard","AuthService","http","headers","set","post","authToken","localStorage","getItem","get","token","setItem","JSON","stringify","clear","isTokenExpired","providedIn","ValidateService","undefined","re","test","String","toLowerCase","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  { path:'', component: HomeComponent},\n  { path:'register', component: RegisterComponent},\n  { path:'login', component: LoginComponent},\n  { path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  { path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your dashboard</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotro text-center\">\n  <h1>MEAN Authentication App</h1>\n  <p class=\"lead\">\n    Welcome to our custom MEAN Authentication Application built from scratch\n  </p>\n  <div>\n    <a class=\"btn btn-priamary\" routerLink=\"/register\">Register</a\n    ><a class=\"btn btn-default\" routerLink=\"/login\">Login</a>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>\n      A rock solid Node.js/Express server using Mongoose to organise models of\n      the database\n    </p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>Angular-CLI</h3>\n    <p>\n      Angular-CLI to generate components, services and more. Local development\n      server and easy compilation\n    </p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>\n      Full Featured authentication using JSON Web Token to login and store\n      user's data\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data['success']) {\n        this.authService.storeUserData(data['token'], data['user']);\n        this._flashMessagesService.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 5000\n        });\n        this.router.navigate(['/dashboard']);\n      } else {\n        this._flashMessagesService.show(data['msg'], {\n          cssClass: 'alert-danger',\n          timeout: 5000\n        });\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Username</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"username\"\n      name=\"username\"\n      class=\"form-control\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      name=\"password\"\n      class=\"form-control\"\n    />\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst helper = new JwtHelperService();\n\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  // let token = localStorage.getItem('id_token');\n  //   const decodedToken = helper.decodeToken(token);\n  //   const expirationDate = helper.getTokenExpirationDate(token);\n  //   const isExpired = helper.isTokenExpired(token);\n  //   console.log(token);\n  //   console.log(decodedToken);\n  //   console.log(expirationDate);\n  //   console.log(isExpired);\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLogoutClick() {\n    this.authService.logout();\n    this._flashMessagesService.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n  isExpired() {\n    return this.authService.isExpired();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLink=\"/\">Mean Auth App</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/\">Home</a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav my-2 my-lg-0\">\n      <li\n        *ngIf=\"!isExpired()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/dashboard\">Dashboard</a>\n      </li>\n      <li\n        *ngIf=\"!isExpired()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/profile\">Profile</a>\n      </li>\n      <li *ngIf=\"isExpired()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n      </li>\n      <li *ngIf=\"isExpired()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/register\">Register</a>\n      </li>\n      <li *ngIf=\"!isExpired()\" class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(\n      profile => {\n        this.user = profile['user'];\n      },\n      err => {\n        return false;\n      }\n    );\n  }\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{ user[\"name\"] }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ user[\"username\"] }}</li>\n    <li class=\"list-group-item\">Email: {{ user[\"email\"] }}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onRegsiterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      this._flashMessagesService.show('Please fill in all fields', {\n        cssClass: 'alert-danger',\n        timeout: 3000\n      });\n      return false;\n    }\n\n    // Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      console.log(!this.validateService.validateRegister(user.email));\n      this._flashMessagesService.show('Please use a valid email', {\n        cssClass: 'alert-danger',\n        timeout: 3000\n      });\n      return false;\n    }\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if (data['success']) {\n        this._flashMessagesService.show(\n          'You are now registered and can login',\n          {\n            cssClass: 'alert-success',\n            timeout: 3000\n          }\n        );\n        this.router.navigate(['/login']);\n      } else {\n        this._flashMessagesService.show('Something went wrong', {\n          cssClass: 'alert-danger',\n          timeout: 3000\n        });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form #registerForm=\"ngForm\" (submit)=\"onRegsiterSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Username</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"username\"\n      name=\"username\"\n      class=\"form-control\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Email</label>\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      name=\"password\"\n      class=\"form-control\"\n    />\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n</form>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.authService.isExpired()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst helper = new JwtHelperService();\n// import { JwtHelperService } from '@auth0/angular-jwt';\n// import { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    // return this.http.post('http://localhost:3000/users/register', user, {\n    return this.http.post('users/register', user, {\n      headers: headers\n    });\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    // return this.http.post('http://localhost:3000/users/authenticate', user, {\n    return this.http.post('users/authenticate', user, {\n      headers: headers\n    });\n  }\n\n  getProfile() {\n    this.authToken = localStorage.getItem('id_token');\n    let headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Authorization', this.authToken);\n    // return this.http.get('http://localhost:3000/users/profile', {\n    return this.http.get('users/profile', {\n      headers: headers\n    });\n  }\n\n  storeUserData(token, user) {\n    this.authToken = token;\n    this.user = user;\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  // loggedIn() {\n  //   console.log(helper.isTokenExpired(this.authToken));\n  //   return helper.isTokenExpired();\n  // }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  isExpired() {\n    const token = localStorage.getItem('id_token');\n    return helper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n  constructor() {}\n\n  validateRegister(user) {\n    if (\n      user.name == undefined ||\n      user.email == undefined ||\n      user.username == undefined ||\n      user.password == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}